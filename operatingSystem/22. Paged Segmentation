용어정리
TLB : translate lookupside buffer 캐시의 일종

내용정리
우선 페이지와 세그멘테이션의 공통 문제점인 메모리 엑세스를 여러번함으로써 발생하는 속도저하는 캐시(TLB)를 이용해 해결할 수 있다. TLB를 64, 128개 정도만 유지해도 속도가 ++된다. 페이지/세그먼트 테이블을 TLB에 올려놓는 것으로 속도 항샹을 노릴 수 있다.

-페이지드 세그멘테이션
먼저 세그멘테이션을하고, 페이징을 하는 것
이럴려면 세그멘트 테이블과 페이지 테이블 합체 할 필요가 있다. 세그멘트 테이블은
	0. 최상위 비트를 인덱스로 사용
	1. 기존 base address 대신 해당 segment의 page table 위치(PTBR)를 저장
	2. 기존 bound 값 대신 해당 segment의 page 개수를 저장
	3. 세그먼트의 R/W 여부 저장
페이지 테이블은
	0. 중상위비트를 페이지 넘버로 인덱스로 사용
	1. 프레임 넘버를 엔트리로 보유
	2. 각각의 페이지의 속성 저장
예) 이 테이블들을 통해서 주소를 변환하는 과정
4bit			8bit	12bit
(세그먼트 테이블 비트)(페이지 넘버)(오프셋)
세그먼트 종류수 : 16개
세그먼트당 페이지 수 : 2^8개
페이지으 크기 : 2^12 바이트 = 4K바이트


-장점
사용하지 않는 페이지테이블은 만들 필요가 없어 압도적으로 페이지 테이블 사이즈가 줄어든다.

-단점
1.1회의 메모리 엑세스를 위해서 3번해야함



(작성중)

